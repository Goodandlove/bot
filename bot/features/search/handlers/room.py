# bot\features\search\handlers\room.py

import logging
from telegram import Update
from telegram.ext import ContextTypes
from bot.core.redis_manager import RedisManager
from bot.core.states import States
from bot.presentation.keyboards.search import price_selection
from bot.data.repositories.user import log_user_action
from bot.presentation.keyboards.search import room_selection


logger = logging.getLogger(__name__)

async def handle_room_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç"""
    user = update.effective_user
    room_choice = update.message.text
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±–æ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
    valid_choices = ['1', '2', '3', '4+', '–°—Ç—É–¥–∏—è']
    if room_choice not in valid_choices:
        await update.message.reply_text(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–æ–º–Ω–∞—Ç",
            reply_markup=room_selection()
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –∫–æ–º–Ω–∞—Ç
    RedisManager().set_search_data(user.id, 'rooms', room_choice)
    RedisManager().set_state(user.id, States.SEARCH_PRICE)
    log_user_action(user.id, user.full_name, f"–í—ã–±–æ—Ä –∫–æ–º–Ω–∞—Ç: {room_choice}")
    
    await update.message.reply_text(
        "üî¢ *–≠—Ç–∞–ø 2: –¶–µ–Ω–∞ (–≤ —Ç—ã—Å—è—á–∞—Ö —Ä—É–±–ª–µ–π)*\n\n"
        "–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞\n",
        reply_markup=price_selection(),
        parse_mode='Markdown'
    )