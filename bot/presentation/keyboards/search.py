# bot/presentation/keyboards/search.py


from telegram import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from bot.data.repositories.favorites import is_favorite_in_db
from bot.core.redis_manager import RedisManager
import asyncio

redis_manager = RedisManager()
    
def room_selection():
    return ReplyKeyboardMarkup([
        ['1', '2', '3'],
        ['‚Ü©Ô∏è –ù–∞–∑–∞–¥','4+', '–°—Ç—É–¥–∏—è']
    ], resize_keyboard=True)

def price_selection():
    return ReplyKeyboardMarkup([
        ['—Ü–µ–Ω–∞ –æ—Ç', '—Ü–µ–Ω–∞ –¥–æ', '–æ—Ç - –¥–æ'],
        ['‚Ü©Ô∏è –ù–∞–∑–∞–¥', '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'] 
    ], resize_keyboard=True)

def floor_selection():
    return ReplyKeyboardMarkup([
        ['–ù–µ 1','–°—Ä–µ–¥–Ω–∏–π','–ù–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π'],        
        ['‚Ü©Ô∏è –ù–∞–∑–∞–¥', '–ü–æ–∫–∞–∑–∞—Ç—å']  
    ], resize_keyboard=True)

def price_input_keyboard():
    return ReplyKeyboardMarkup([
        ['‚Ü©Ô∏è –ù–∞–∑–∞–¥', '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å']
    ], resize_keyboard=True)

 
 
def details_keyboard(property_data, user_id=None):
    """–°–æ–∑–¥–∞—ë—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É—á—ë—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"""
    property_id = property_data['id']
    photo_cnt = property_data.get('photocnt', 0)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ –∫–µ—à Redis
    is_fav = redis_manager.is_favorite_in_cache(user_id, property_id) if user_id else False
    
    # –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ç–æ" —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º
    buttons = []
    if photo_cnt > 0:
        photo_text = f"üñº –ü–æ–∫–∞–∑–∞—Ç—å {photo_cnt} —Ñ–æ—Ç–æ"
        buttons.append(InlineKeyboardButton(photo_text, callback_data=f"details_{property_id}"))
    
    # –ö–Ω–æ–ø–∫–∞ "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ" —Å –∏–∑–º–µ–Ω—è—é—â–µ–π—Å—è –∏–∫–æ–Ω–∫–æ–π
    fav_icon = "‚ù§Ô∏è" if is_fav else "ü§ç"
    fav_text = f"{fav_icon} –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º" if is_fav else f"{fav_icon} –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
    fav_button = InlineKeyboardButton(fav_text, callback_data=f"fav_{property_id}")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ –∫–Ω–æ–ø–æ–∫
    keyboard = []
    if buttons:
        keyboard.append(buttons)
    keyboard.append([fav_button])
    
    return InlineKeyboardMarkup(keyboard)

